package solution;

public class Day3 {

	//1.나머지 구하기
	class Solution {
	    public int solution(int num1, int num2) {
	        int answer = -1;
	        if(0<num1 && num1<=100 && 0<num2 && num2<=100){
	            answer = num1%num2;
	        }
	        return answer;
	    }
	}
	
	// 2.중앙값 구하기
	class Solution {
	    public int solution(int[] array) {
	        int answer = 0;
	        int i,j,tem = 0;
	        
	        for(i = 0; i< array.length; i++){
	            for(j = 0; j<(array.length - 1) - i; j++){
	                if(array[j]>array[j+1]){
	                    tem = array[j];
	                    array[j] = array[j+1];
	                    array[j+1] = tem;
	                } //버블 정렬 값 오름 차순 정렬
	            }
	        }
	        
	        return answer = array[array.length/2]; //중앙값 구하기
	    }
	}

	//3. 최빈값 구하기 
	// 남이 푼걸 봐도 잘 모르겠네요 ㅠ
	class Solution {
	    public int solution(int[] array) {
	        int answer = 0;
	        int arr_max = 0;
	        
	        for (int i = 0; i < array.length; i++) {
	            if (array[i] > arr_max) {
	                arr_max = array[i];
	            }
	        }
	        
	        int[] count = new int[arr_max + 1];
	        int max = 0;
	        
	        int n = 0;
	        int mode = 0;
	        
	        for (int i = 0; i < array.length; i++) {
	            count[array[i]]++;
	        }
	        
	        for (int i = 0; i < count.length; i++) {
	            if (count[i] > max) {
	                max = count[i];
	                answer = i;
	            }
	        }
	        
	        for (int i = 0; i < count.length; i++) {
	            mode++;
	            
	            if (count[i] == max) {
	                n++;
	            }
	        }
	        
	        if (n > 1) 
	            answer = -1;
	        
	        return answer;
	    }
	}











//4. 짝수는 싫어요
	
	class Solution {
	    public int[] solution(int n) {
	        int[] answer = {};
	        int k = 0;
	        
	        if (n % 2 == 0) {
	            answer = new int[n/2];
	        }else{
	            answer = new int[(n/2) + 1];
	        } //배열 갯수 정해서 생성
	        for (int i =0; i<=n; i++){
	            if(i%2 == 1) {
	                answer[k] = i;
	                k++;
	            } //홀수만 배열에 저장
	        }    
	        return answer;
	    }
	}
}
